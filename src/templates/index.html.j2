<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>l'Altruite</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css" integrity="sha512-SbiR/eusphKoMVVXysTKG/7VseWii+Y3FdHrt0EpKgpToZeemhqHeZeLWLhJutz/2ut2Vw1uQEj2MbRF+TVBUA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="css/style.css">
</head>
<body>

<div class="content">
    <section class="header">
        <h1>L'Altruite <span class="headline"> API pour l'Altruite </span></h1>
        <nav>
            <ul class="authors">
                <span class="authorsTitle"> Auteurs : </span>
                <a href="https://github.com/lpi-code" target="_blank"> <li> PL </li> </a>
                <a href="https://github.com/arthurmtx" target="_blank"> <li> PA </li> </a>
                <a href="https://github.com/nobozor" target="_blank"> <li> MM </li> </a>
            </ul>
        </nav>
        <a href="https://github.com/lpi-code/IMT-Altruite-SemanticWeb" target="_blank">GitHub</a>
        <a href="https://mtx.dev/ontology/fishes" target="_blank">Ontology</a>
    </section>

    <section class="routes">
        <h1>Routes</h1>

        <ul>
            {% for route in routes %}
                <li><a href="/api/{{route}}" target="_blank">{{route}}</a></li>
            {% endfor %}
        </ul>

    </section>

    <section class="query">
        <h1>SPARQL Query</h1>

        <div class="container-fluid">
            <div class="row">
                <div class="col-6">
                    <form action="/" method="post" id="queryForm">
                        <div class="form-group queryArea">
                            <textarea class="form-control" id="sparqlQuery" name="sparqlQuery" rows="10" placeholder="Rédigez une requête SPARQL ici" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary" id="submitButton">Envoyer</button>
                        <button type="button" class="btn btn-secondary" id="sampleButton">Exemple</button>
                        <button type="reset" class="btn btn-danger" id="resetButton">Réinitialiser</button>
                    </form>
                </div>
                <div class="col-6">
                    <div id="result">
                        <h3>Resultat : </h3>
                        <pre id="resultContent"></pre>
                        <p id="message"></p>
                    </div>
                </div>
            </div>
        </div>

    </section>
</div>

<div class="background"></div>

<script>
    let queryContent = document.getElementById('sparqlQuery');
    let resultContent = document.getElementById('resultContent');
    let messageContent = document.getElementById('message');

    resultContent.textContent = 'Effectuez une requête SPARQL pour voir le résultat ici';

    document.getElementById('sampleButton').addEventListener('click', function(event) {
        queryContent.value =
            `PREFIX URI: <https://mtx.dev/ontology/fishes#>

SELECT ?x
    WHERE {
        ?x a URI:Poisson
    }`

        document.getElementById('submitButton').click();
    });

    document.getElementById('resetButton').addEventListener('click', function(event) {
        queryContent.value = '';
        resultContent.textContent = 'Effectuez une requête SPARQL pour voir le résultat ici';
        messageContent.textContent = '';
    });

    document.getElementById('queryForm').addEventListener('submit', function(event) {
        // Empêche la soumission du formulaire
        event.preventDefault();

        // Récupère les données du formulaire
        let form = event.target;
        let formData = new FormData(form);

        // Envoie les données du formulaire en AJAX
        let xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
            // Si la requête est terminée
            if (xhr.readyState === XMLHttpRequest.DONE) {
                // Si la réponse est un succès
                if (xhr.status === 200) {
                    // Récupère la réponse et les messages
                    let response = JSON.parse(xhr.responseText);

                    // Si la réponse contient une erreur
                    if (response.error) {
                        resultContent.textContent = 'Erreur : ' + response.error;
                        messageContent.textContent = '';
                    } else if (response.message) {
                        resultContent.textContent = '';
                        messageContent.textContent = response.message;
                    } else if (response.result) {
                        resultContent.textContent = response.result.join('\n');
                        messageContent.textContent = '';
                    } else {
                        console.error('Réponse invalide : ' + xhr.responseText);
                    }
                } else {
                    console.error('Erreur lors de la requête : ' + xhr.status);
                }
            }
        };

        // Envoie la requête
        xhr.open(form.method, form.action, true);
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        xhr.send(formData);
    });
</script>
</body>
</html>